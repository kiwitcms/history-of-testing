name: lint

on:
  push:
    branches: master
  pull_request:

jobs:
  title_is_not_empty:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2.3.2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Check for empty title in Yaml
      run: |
        pip install -r requirements.txt

        for FACT_YAML in $(find -name info.yaml); do
            TITLE=$(yq -r ".title" $FACT_YAML)
            if [ -z "$TITLE" ]; then
                echo "FAIL: Empty title in $FACT_YAML"
                exit 1
            fi

            if [ "$TITLE" == "null" ]; then
                echo "FAIL: Empty title in $FACT_YAML"
                exit 2
            fi
        done

  first_line_rules:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2.3.2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Check first line
      run: |
        pip install -r requirements.txt

        for FACT_YAML in $(find -name info.yaml); do
            REMAINDER=$(yq -r ".description" $FACT_YAML | head -n1 | cut -f2 -d.)
            if [ -n "$REMAINDER" ]; then
                echo "FAIL: First line in $FACT_YAML's 'description' contains >1 dots or the sentence is split into more lines!"
                echo "TODO: Make sure that the 1st sentence is of the format 'On Month DD, YYYY was born First Last.'"
                echo "TODO: - it should finish with a dot (.) and nothing else afterwards"
                echo "TODO: - names should not be abbreviated, e.g. 'John M. Doe' is not allowed b/c it breaks automation"
                echo "TODO: - the next sentence starts on the second line"
                exit 1
            fi
        done

  no_quotes_in_yaml_file:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Check for quotes in Yaml
      run: |
        for FACT_YAML in $(find -name info.yaml); do
            if grep '"' $FACT_YAML; then
                echo "FAIL: Double quotes found in $FACT_YAML. Replace with single quotes!"
                exit 1
            fi

            if grep '`' $FACT_YAML; then
                echo "FAIL: Back-tick quotes found in $FACT_YAML. Replace with single quotes!"
                exit 2
            fi

            if grep '“' $FACT_YAML; then
                echo "FAIL: Double quotes found in $FACT_YAML. Replace with single quotes!"
                exit 3
            fi

            if grep '”' $FACT_YAML; then
                echo "FAIL: Double quotes found in $FACT_YAML. Replace with single quotes!"
                exit 4
            fi
        done

  image_is_600x600:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2.3.2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Check for appropriate image size
      run: |
        pip install -r requirements.txt

        for FACT_YAML in $(find -name info.yaml); do
            FACT_DIR=$(dirname $FACT_YAML)

            for FILENAME in $(yq -r ".images[].filename" $FACT_YAML); do
                IMAGE=$FACT_DIR/$FILENAME
                file $IMAGE
                file $IMAGE | egrep "600x600|600 x 600"
            done
        done
